# modules/video_output/Makefile.am automatically generated from modules/video_output/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

basedir = video_output
libvlc_LTLIBRARIES =  $(LTLIBaa) $(LTLIBandroid_surface) $(LTLIBdirectfb) $(LTLIBfb) $(LTLIBvout_coregraphicslayer) $(LTLIBvout_ios2) $(LTLIBvout_macosx) $(LTLIBvout_sdl)
EXTRA_LTLIBRARIES =  libaa_plugin.la libandroid_surface_plugin.la libdirectfb_plugin.la libfb_plugin.la libvout_coregraphicslayer_plugin.la libvout_ios2_plugin.la libvout_macosx_plugin.la libvout_sdl_plugin.la

EXTRA_DIST = Modules.am

include $(top_srcdir)/modules/common.am
include $(srcdir)/Modules.am

if MAINTAINER_MODE
$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf video_output
endif

# The aa plugin
if HAVE_WIN32
libaa_plugin_la_DEPENDENCIES = libaa_plugin.rc.o
endif
libaa_plugin_la_SOURCES = $(SOURCES_aa)
nodist_libaa_plugin_la_SOURCES = $(nodist_SOURCES_aa)
# Force per-target objects:
libaa_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_aa)
libaa_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_aa)
libaa_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_aa)
libaa_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_aa)
# Set LIBADD manually:
libaa_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_aa)
libaa_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_aa)

# The android_surface plugin
if HAVE_WIN32
libandroid_surface_plugin_la_DEPENDENCIES = libandroid_surface_plugin.rc.o
endif
libandroid_surface_plugin_la_SOURCES = $(SOURCES_android_surface)
nodist_libandroid_surface_plugin_la_SOURCES = $(nodist_SOURCES_android_surface)
# Force per-target objects:
libandroid_surface_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_android_surface)
libandroid_surface_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_android_surface)
libandroid_surface_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_android_surface)
libandroid_surface_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_android_surface)
# Set LIBADD manually:
libandroid_surface_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_android_surface)
libandroid_surface_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_android_surface)

# The directfb plugin
if HAVE_WIN32
libdirectfb_plugin_la_DEPENDENCIES = libdirectfb_plugin.rc.o
endif
libdirectfb_plugin_la_SOURCES = $(SOURCES_directfb)
nodist_libdirectfb_plugin_la_SOURCES = $(nodist_SOURCES_directfb)
# Force per-target objects:
libdirectfb_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_directfb)
libdirectfb_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_directfb)
libdirectfb_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_directfb)
libdirectfb_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_directfb)
# Set LIBADD manually:
libdirectfb_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_directfb)
libdirectfb_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_directfb)

# The fb plugin
if HAVE_WIN32
libfb_plugin_la_DEPENDENCIES = libfb_plugin.rc.o
endif
libfb_plugin_la_SOURCES = $(SOURCES_fb)
nodist_libfb_plugin_la_SOURCES = $(nodist_SOURCES_fb)
# Force per-target objects:
libfb_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_fb)
libfb_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_fb)
libfb_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_fb)
libfb_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_fb)
# Set LIBADD manually:
libfb_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_fb)
libfb_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_fb)

# The vmem plugin
if HAVE_WIN32
libvmem_plugin_la_DEPENDENCIES = libvmem_plugin.rc.o
endif
libvmem_plugin_la_SOURCES = $(SOURCES_vmem)
nodist_libvmem_plugin_la_SOURCES = $(nodist_SOURCES_vmem)
# Force per-target objects:
libvmem_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vmem)
libvmem_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vmem)
libvmem_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vmem)
libvmem_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vmem)
# Set LIBADD manually:
libvmem_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vmem)
libvmem_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vmem)

# The vout_coregraphicslayer plugin
if HAVE_WIN32
libvout_coregraphicslayer_plugin_la_DEPENDENCIES = libvout_coregraphicslayer_plugin.rc.o
endif
libvout_coregraphicslayer_plugin_la_SOURCES = $(SOURCES_vout_coregraphicslayer)
nodist_libvout_coregraphicslayer_plugin_la_SOURCES = $(nodist_SOURCES_vout_coregraphicslayer)
# Force per-target objects:
libvout_coregraphicslayer_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_coregraphicslayer)
libvout_coregraphicslayer_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_coregraphicslayer)
libvout_coregraphicslayer_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_coregraphicslayer)
libvout_coregraphicslayer_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_coregraphicslayer)
# Set LIBADD manually:
libvout_coregraphicslayer_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_coregraphicslayer)
libvout_coregraphicslayer_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_coregraphicslayer)

# The vout_ios2 plugin
if HAVE_WIN32
libvout_ios2_plugin_la_DEPENDENCIES = libvout_ios2_plugin.rc.o
endif
libvout_ios2_plugin_la_SOURCES = $(SOURCES_vout_ios2)
nodist_libvout_ios2_plugin_la_SOURCES = $(nodist_SOURCES_vout_ios2)
# Force per-target objects:
libvout_ios2_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_ios2)
libvout_ios2_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_ios2)
libvout_ios2_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_ios2)
libvout_ios2_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_ios2)
# Set LIBADD manually:
libvout_ios2_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_ios2)
libvout_ios2_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_ios2)

# The vout_macosx plugin
if HAVE_WIN32
libvout_macosx_plugin_la_DEPENDENCIES = libvout_macosx_plugin.rc.o
endif
libvout_macosx_plugin_la_SOURCES = $(SOURCES_vout_macosx)
nodist_libvout_macosx_plugin_la_SOURCES = $(nodist_SOURCES_vout_macosx)
# Force per-target objects:
libvout_macosx_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_macosx)
libvout_macosx_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_macosx)
libvout_macosx_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_macosx)
libvout_macosx_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_macosx)
# Set LIBADD manually:
libvout_macosx_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_macosx)
libvout_macosx_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_macosx)

# The vout_sdl plugin
if HAVE_WIN32
libvout_sdl_plugin_la_DEPENDENCIES = libvout_sdl_plugin.rc.o
endif
libvout_sdl_plugin_la_SOURCES = $(SOURCES_vout_sdl)
nodist_libvout_sdl_plugin_la_SOURCES = $(nodist_SOURCES_vout_sdl)
# Force per-target objects:
libvout_sdl_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vout_sdl)
libvout_sdl_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vout_sdl)
libvout_sdl_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vout_sdl)
libvout_sdl_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vout_sdl)
# Set LIBADD manually:
libvout_sdl_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vout_sdl)
libvout_sdl_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vout_sdl)

# The yuv plugin
if HAVE_WIN32
libyuv_plugin_la_DEPENDENCIES = libyuv_plugin.rc.o
endif
libyuv_plugin_la_SOURCES = $(SOURCES_yuv)
nodist_libyuv_plugin_la_SOURCES = $(nodist_SOURCES_yuv)
# Force per-target objects:
libyuv_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_yuv)
libyuv_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_yuv)
libyuv_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_yuv)
libyuv_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_yuv)
# Set LIBADD manually:
libyuv_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_yuv)
libyuv_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_yuv)

