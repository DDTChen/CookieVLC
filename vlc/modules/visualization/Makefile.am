# modules/visualization/Makefile.am automatically generated from modules/visualization/Modules.am by modules/genmf
# DO NOT EDIT THIS FILE DIRECTLY! See Modules.am instead.

basedir = visualization
libvlc_LTLIBRARIES =  $(LTLIBglspectrum) $(LTLIBgoom) $(LTLIBprojectm) $(LTLIBvsxu)
EXTRA_LTLIBRARIES =  libglspectrum_plugin.la libgoom_plugin.la libprojectm_plugin.la libvsxu_plugin.la

EXTRA_DIST = Modules.am

include $(top_srcdir)/modules/common.am
include $(srcdir)/Modules.am

if MAINTAINER_MODE
$(srcdir)/Makefile.am: $(srcdir)/Modules.am $(top_srcdir)/modules/genmf
	$(AM_V_GEN)cd \$(top_srcdir) && \$(SHELL) modules/genmf visualization
endif

# The glspectrum plugin
if HAVE_WIN32
libglspectrum_plugin_la_DEPENDENCIES = libglspectrum_plugin.rc.o
endif
libglspectrum_plugin_la_SOURCES = $(SOURCES_glspectrum)
nodist_libglspectrum_plugin_la_SOURCES = $(nodist_SOURCES_glspectrum)
# Force per-target objects:
libglspectrum_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_glspectrum)
libglspectrum_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_glspectrum)
libglspectrum_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_glspectrum)
libglspectrum_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_glspectrum)
# Set LIBADD manually:
libglspectrum_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_glspectrum)
libglspectrum_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_glspectrum)

# The goom plugin
if HAVE_WIN32
libgoom_plugin_la_DEPENDENCIES = libgoom_plugin.rc.o
endif
libgoom_plugin_la_SOURCES = $(SOURCES_goom)
nodist_libgoom_plugin_la_SOURCES = $(nodist_SOURCES_goom)
# Force per-target objects:
libgoom_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_goom)
libgoom_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_goom)
libgoom_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_goom)
libgoom_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_goom)
# Set LIBADD manually:
libgoom_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_goom)
libgoom_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_goom)

# The projectm plugin
if HAVE_WIN32
libprojectm_plugin_la_DEPENDENCIES = libprojectm_plugin.rc.o
endif
libprojectm_plugin_la_SOURCES = $(SOURCES_projectm)
nodist_libprojectm_plugin_la_SOURCES = $(nodist_SOURCES_projectm)
# Force per-target objects:
libprojectm_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_projectm)
libprojectm_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_projectm)
libprojectm_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_projectm)
libprojectm_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_projectm)
# Set LIBADD manually:
libprojectm_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_projectm)
libprojectm_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_projectm)

# The vsxu plugin
if HAVE_WIN32
libvsxu_plugin_la_DEPENDENCIES = libvsxu_plugin.rc.o
endif
libvsxu_plugin_la_SOURCES = $(SOURCES_vsxu)
nodist_libvsxu_plugin_la_SOURCES = $(nodist_SOURCES_vsxu)
# Force per-target objects:
libvsxu_plugin_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPPFLAGS_vsxu)
libvsxu_plugin_la_CFLAGS = $(AM_CFLAGS) $(CFLAGS_vsxu)
libvsxu_plugin_la_CXXFLAGS = $(AM_CXXFLAGS) $(CXXFLAGS_vsxu)
libvsxu_plugin_la_OBJCFLAGS = $(AM_OBJCFLAGS) $(OBJCFLAGS_vsxu)
# Set LIBADD manually:
libvsxu_plugin_la_LIBADD = $(AM_LIBADD) $(LIBS_vsxu)
libvsxu_plugin_la_LDFLAGS = $(AM_LDFLAGS) $(LDFLAGS_vsxu)

